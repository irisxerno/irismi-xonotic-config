bot_nofire 0 // "When set, bots never fire. Mainly for testing in g_waypointeditor mode"
skill_auto 0 // "when 1, "skill" gets adjusted to match the best player on the map"
bot_debug_tracewalk 0 // "Enable visual indicators for short-term navigation. Green: Goal Reached / Yellow: Obstacle found / Red: Unsolvable obstacle found// "
bot_debug_goalstack 0 // "Visualize the current path that each bot is following. Use with as few bots as possible."
bot_wander_enable 1 // "Have bots wander around if they are unable to reach any useful goal. Disable only for debugging purposes."
bot_typefrag 0 // "Allow bots to shoot players while they're typing"
// general bot AI cvars
bot_ai_thinkinterval 0.05 // "Frame rate at which bots update their navigation and aiming, scales by skill"
bot_ai_strategyinterval 7 // "How often a new objective is chosen"
bot_ai_strategyinterval_movingtarget 5.5 // "How often a new objective is chosen when current objective can move"
bot_ai_enemydetectioninterval 2 // "How often bots try to pick a new target if no suitable target is found"
bot_ai_enemydetectioninterval_stickingtoenemy 4 // "How often bots try to pick a new target while targetting an enemy"
bot_ai_enemydetectionradius 10000 // "How far bots can see enemies"
bot_ai_dodgeupdateinterval 0.2 // "How often scan for items to dodge. Currently not in use."
bot_ai_chooseweaponinterval 0.5 // "How often the best weapon according to the situation will be chosen"
bot_ai_dangerdetectioninterval 0.25 // "How often scan for waypoints with dangers near"
bot_ai_dangerdetectionupdates 64 // "How many waypoints will be considered for danger detection"
bot_ai_aimskill_blendrate 2 // "How much correction will be applied to the aiming angle"
bot_ai_aimskill_fixedrate 15 // "Distance based scale from which correction will be applied to the aiming angle"
bot_ai_aimskill_firetolerance 0 // "enable fire tolerance"
bot_ai_aimskill_firetolerance_distdegrees 100 // "Rate at which the aiming angle is updated, scales by skill"
bot_ai_aimskill_firetolerance_mindegrees 2 // "Minimum angle tolerance. Used on large distances"
bot_ai_aimskill_firetolerance_maxdegrees 60 // "Maximum firing angle. Used on close range"
bot_ai_aimskill_mouse 1 // "How much of the aiming filters are applied"
bot_ai_keyboard_distance 250 // "Keyboard emulation is disabled after this distance to the goal"
bot_ai_keyboard_threshold 0.57
bot_ai_aimskill_offset 0.3 // "Amount of error induced to the bots aim"
bot_ai_aimskill_think 1 // "Aiming velocity. Use values below 1 for slower aiming"
bot_ai_custom_weapon_priority_distances "300 850" // "Define close and far distances in any order. Based on the distance to the enemy bots will choose different weapons"
bot_ai_custom_weapon_priority_far "vaporizer oknex vortex rifle electro devastator mortar hagar hlac crylink blaster okmachinegun machinegun fireball seeker okshotgun shotgun shockwave tuba minelayer" // "Desired weapons for far distances ordered by priority"
bot_ai_custom_weapon_priority_mid "vaporizer devastator oknex vortex fireball seeker mortar electro okmachinegun machinegun arc crylink hlac hagar okshotgun shotgun shockwave blaster rifle tuba minelayer" // "Desired weapons for middle distances ordered by priority"
bot_ai_custom_weapon_priority_close "vaporizer oknex vortex okshotgun shotgun shockwave okmachinegun machinegun arc hlac tuba seeker hagar crylink mortar electro devastator blaster fireball rifle minelayer" // "Desired weapons for close distances ordered by priority"
bot_ai_weapon_combo 1 // "Enable bots to do weapon combos"
bot_ai_weapon_combo_threshold 0.4 // "Try to make a combo N seconds after the last attack"
bot_ai_friends_aware_pickup_radius "500" // "Bots will not pickup items if a team mate is this distance near the item"
bot_ai_ignoregoal_timeout 3 // "Ignore goals making bots to get stuck in front of a wall for N seconds"
bot_ai_bunnyhop_skilloffset 7 // "Bots with skill equal or greater than this value will perform the \"bunnyhop\" technique"
bot_ai_bunnyhop_dir_deviation_max 20 // "bunnyhop if speed - direction deviation is <= this amount// "
bot_ai_bunnyhop_downward_pitch_max 30 // "bunnyhop if downard pitch towards the next waypoint is <= this amount// "
bot_ai_bunnyhop_turn_angle_max 80 // "bunnyhop if next turn angle is <= this amount at walk speed (sv_maxspeed)// "
bot_ai_bunnyhop_turn_angle_min 4 // "bunnyhop regardless of speed if next turn angle is <= this amount// "
bot_ai_bunnyhop_turn_angle_reduction 40 // "linearly reduce max turn angle by this amount when speed increases by sv_maxspeed// "
bot_ai_navigation_jetpack 0 // "Enable bots to navigate maps using the jetpack"
bot_ai_navigation_jetpack_mindistance 3500 // "Bots will try fly to objects located farther than this distance"
// Better don't touch these, there are hard to tweak!
bot_ai_aimskill_order_mix_1st 0.01 // "Amount of the 1st filter output to apply to the aiming angle"
bot_ai_aimskill_order_mix_2nd 0.075 // "Amount of the 2nd filter output to apply to the aiming angle"
bot_ai_aimskill_order_mix_3th 0.01 // "Amount of the 3th filter output to apply to the aiming angle"
bot_ai_aimskill_order_mix_4th 0.0375 // "Amount of the 4th filter output to apply to the aiming angle"
bot_ai_aimskill_order_mix_5th 0.01 // "Amount of the 5th filter output to apply to the aiming angle"
bot_ai_aimskill_order_filter_1st 0.2 // "Position filter"
bot_ai_aimskill_order_filter_2nd 0.2 // "Movement filter"
bot_ai_aimskill_order_filter_3th 0.1 // "Acceleration filter"
bot_ai_aimskill_order_filter_4th 0.2 // "Position prediction filter. Used rarely"
bot_ai_aimskill_order_filter_5th 0.25 // "Movement prediction filter. Used rarely"
bot_ai_timeitems 1 // "allow skilled bots to run to important items a little time before respawning"
bot_ai_timeitems_minrespawndelay 25 // "bots run to items with this minimum respawn delay before respawning"
